version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: evently_postgres
    environment:
      POSTGRES_DB: evently_db
      POSTGRES_USER: evently_user
      POSTGRES_PASSWORD: evently_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U evently_user -d evently_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - evently_network

  # Redis Cache & Message Broker
  redis:
    image: redis:7-alpine
    container_name: evently_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - evently_network

  # FastAPI Application
  fastapi-app:
    build: .
    container_name: evently_api
    environment:
      DATABASE_URL: postgresql+asyncpg://evently_user:evently_password@postgres:5432/evently_db
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      SECRET_KEY: your-super-secret-key-change-this-in-production
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      ENVIRONMENT: production
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app/app
    networks:
      - evently_network
    restart: unless-stopped

  # Celery Worker
  celery-worker:
    build: .
    container_name: evently_celery_worker
    command: celery -A app.worker.celery_app worker --loglevel=info
    environment:
      DATABASE_URL: postgresql+asyncpg://evently_user:evently_password@postgres:5432/evently_db
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      SECRET_KEY: your-super-secret-key-change-this-in-production
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      ENVIRONMENT: production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app/app
    networks:
      - evently_network
    restart: unless-stopped

  # Celery Flower
  celery-flower:
    build: .
    container_name: evently_flower
    command: celery -A app.worker.celery_app flower --port=5555
    environment:
      DATABASE_URL: postgresql+asyncpg://evently_user:evently_password@postgres:5432/evently_db
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery-worker
    volumes:
      - ./app:/app/app
    networks:
      - evently_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  evently_network:
    driver: bridge
